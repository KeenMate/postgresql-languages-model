/*
 GROUP HEADERS GENERATED BY: https://patorjk.com/software/taag/#p=display&h=0&v=1&c=c&f=ANSI%20Shadow&t=STAGE%20FUNCS

 SUB GROUP HEADERS GENERATED BY: https://patorjk.com/software/taag/#p=display&h=1&v=1&c=c&f=Banner3&t=permissions
*/

select *
from start_version_update('1.5', 'Correct handling of tenant_id in regard of tenant.translations_tenant_id',
													_component := 'languages_translations');

/***
 *    ██╗      █████╗ ███╗   ██╗ ██████╗ ██╗   ██╗ █████╗  ██████╗ ███████╗███████╗
 *    ██║     ██╔══██╗████╗  ██║██╔════╝ ██║   ██║██╔══██╗██╔════╝ ██╔════╝██╔════╝
 *    ██║     ███████║██╔██╗ ██║██║  ███╗██║   ██║███████║██║  ███╗█████╗  ███████╗
 *    ██║     ██╔══██║██║╚██╗██║██║   ██║██║   ██║██╔══██║██║   ██║██╔══╝  ╚════██║
 *    ███████╗██║  ██║██║ ╚████║╚██████╔╝╚██████╔╝██║  ██║╚██████╔╝███████╗███████║
 *    ╚══════╝╚═╝  ╚═╝╚═╝  ╚═══╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚══════╝
 *
 */

/***
*    ████████╗ █████╗ ██████╗ ██╗     ███████╗███████╗
*    ╚══██╔══╝██╔══██╗██╔══██╗██║     ██╔════╝██╔════╝
*       ██║   ███████║██████╔╝██║     █████╗  ███████╗
*       ██║   ██╔══██║██╔══██╗██║     ██╔══╝  ╚════██║
*       ██║   ██║  ██║██████╔╝███████╗███████╗███████║
*       ╚═╝   ╚═╝  ╚═╝╚═════╝ ╚══════╝╚══════╝╚══════╝
*
*/

alter table auth.tenant
	add column translations_tenant_id int not null default 1;


/***
*    ███████╗██╗   ██╗███╗   ██╗ ██████╗███████╗
*    ██╔════╝██║   ██║████╗  ██║██╔════╝██╔════╝
*    █████╗  ██║   ██║██╔██╗ ██║██║     ███████╗
*    ██╔══╝  ██║   ██║██║╚██╗██║██║     ╚════██║
*    ██║     ╚██████╔╝██║ ╚████║╚██████╗███████║
*    ╚═╝      ╚═════╝ ╚═╝  ╚═══╝ ╚═════╝╚══════╝
*
*/

drop function if exists const.get_language(
	_language_code text);
drop function if exists const.get_language(
	_display_language_code text
, _language_code text);
create function const.get_language(
	_display_language_code text
, _language_code text
, _tenant_id int default 1)
	returns table
					(
						__code
																					text,
						__value
																					text,
						__title
																					text,
						__tenant_id                   integer,
						__is_frontend_language
																					boolean,
						__is_backend_language
																					boolean,
						__is_communication_language
																					boolean,
						__frontend_logical_order      integer,
						__backend_logical_order       integer,
						__communication_logical_order integer,
						__is_default_frontend_language
																					boolean,
						__is_default_backend_language
																					boolean,
						__is_default_communication_language
																					boolean,
						__custom_data
																					jsonb
					)
	language sql
as
$$
select l.code
		 , l.value
		 , coalesce(tr.value, l.value)
		 , l.tenant_id
		 , l.is_frontend_language
		 , l.is_backend_language
		 , l.is_communication_language
		 , l.frontend_logical_order
		 , l.backend_logical_order
		 , l.communication_logical_order
		 , l.is_default_frontend_language
		 , l.is_default_backend_language
		 , l.is_default_communication_language
		 , l.custom_data
from auth.tenant t
			 inner join const.language l on l.tenant_id = t.translations_tenant_id
			 left join public.translation tr
								 on tr.tenant_id = l.tenant_id and tr.language_code = _display_language_code and
										data_group = 'language' and data_object_code = l.code
where t.tenant_id = _tenant_id
	and l.code = _language_code;
$$;

-- drop function public.export_translations(_data_group text);
-- create
-- 	or replace function public.export_translations(_user_id bigint, _data_group text)
-- 	returns table
-- 					(
-- 						__tenant_id    int,
-- 						__lang_code    text,
-- 						__translations jsonb,
-- 						__count        bigint
-- 					)
-- 	stable
-- 	language plpgsql
-- as
-- $$
-- begin
-- 	perform has_permission(1, 'translations.read_all_translations');
--
-- 	select t.tenant_id,
-- 				 t.language_code,
-- 				 jsonb_object_agg(t.data_object_code, t.value),
-- 				 count(t.translation_id)
-- 	from public.translation t
-- 	where t.data_group = _data_group
-- 	group by t.tenant_id, t.language_code;
-- end;
-- $$;

drop function get_group_translations(_language_code text, _group_code text);
create
	or replace function public.get_group_translations(
	_language_code text
, _group_code text
, _tenant_id int default 1)
	returns table
					(
						__translations jsonb
					)
	stable
	language sql
as
$$
select jsonb_object_agg(data_object_code, value)
from auth.tenant t
			 inner join public.translation on translation.tenant_id = t.translations_tenant_id
where t.tenant_id = coalesce(_tenant_id, 1)
	and language_code = _language_code
	and data_group = _group_code
group by data_group
	;
$$;

select *
from stop_version_update('1.5', _component := 'languages_translations');
